https://www.cyberciti.biz/faq/installing-mysql-server-on-ubuntu-22-04-lts-linux/

sudo apt update
sudo apt list --upgradable # get a list of upgrades
sudo apt upgrade
----------------------------Search for packages-----------------------------
Step 2 – Searching for MySQL 8 server packages on Ubuntu 22.04 LTS
Use the apt-cache command or apt command as follows to search for MySQL server and client packages on your Ubuntu 22.04 LTS. For example:
apt-cache search mysql-server

The system will return a list of available options, including Oracle MySQL 8.xx and MariaDB 10.x server and client on Ubuntu 22.04 LTS:

Want to find out more about MySQL server package named ‘mysql-server-8.0’? Try the apt command as follows on your Ubuntu 22.04 LTS machine before you install mysql on Ubuntu 22.04:
apt info -a mysql-server-8.0


mysql-server-8.0 vs mysql-server-core-8.0 package:
    mysql-server-8.0 – contains MySQL database server binaries, clients and system database setup.
    mysql-server-core-8.0 – the server binaries but doesn’t contain all the infrastructure needed to set up system databases. More useful for those setting up Linux containers (Docker, LXD and co) and don’t need all the stuff like mysql clients.
-----------------install MySQL server version 8.0.28 on Ubuntu 22.04 LTS:-------------
sudo apt install mysql-server-8.0
-----------------------------------Set the root password(Sp08)-----------------
sudo mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'xxxxxxxxxxxxx;
exit
-------------------MySQL 8.xx essentials config files and ports
    mysql.service – The service name. 
sudo systemctl start mysql.service
sudo systemctl stop mysql.service
sudo systemctl restart mysql.service
sudo systemctl status mysql.service

/etc/mysql/ – Main MySQL server configuration directory.
/etc/mysql/my.cnf – The MySQL database server configuration file. Edit the .my.cnf ($HOME/.my.cnf) to set user-specific options. Additional settings that can override from the following two directories:
/etc/mysql/conf.d/
/etc/mysql/mysql.conf.d/
TCP/3306 port – The TCP/3306 is the default network for the MySQL server and binds to 127.0.0.1 for security reasons. However, you can change it if you need VLAN or VPN CIDR access. Then you can access the MySQL server using the localhost socket set in the/run/mysqld/ directory.
---------------securing MYSQL 8 server -----------------
sudo mysql_secure_installation
Sp08
remove test database
remote access
remove anonymous access
------------Step 5 – Enabling the MySQL server at boot time
Make sure our MySQL server 8 starts when the system boots using the systemctl command:
sudo systemctl is-enabled mysql.service
If not enabled, type the following command to enable the server:
sudo systemctl enable mysql.service
Verify MySQL 8 server status on Ubuntu Linux 20.04 LTS by typing the following systemctl command:
sudo systemctl status mysql.service
--------------Troushooting the MySQL server issues
We can view the MySQL service log as follows using the journalctl command:
sudo journalctl -u mysql.service -xe
sudo tail -f /var/log/mysql/error.log
----------------------Log in and create db---------------------------
mysql -u root -p
CREATE DATABASE mydemodb;
CREATE USER 'student'@'%' IDENTIFIED BY 'Student1.';
GRANT SELECT, INSERT, UPDATE, DELETE ON mydemodb.* TO 'student'@'%';
or
GRANT ALL PRIVILEGES ON mydemodb.* TO 'student'@'%';

SELECT USER,host FROM mysql.user;
SHOW GRANTS FOR student;
-------------------create table-----
mysql -h <db_host> -u <user> -D <db_name> -p
or
mysql -u student -p
use mydemodb;
show tables;
create table students ( id int, lastname varchar(25), firstname varchar(25));
INSERT INTO students (id, lastname, firstname) VALUES (101, 'Bond', 'James');
INSERT INTO students (id, lastname, firstname) VALUES (102, 'Connery', 'Sean');
INSERT INTO students (id, lastname, firstname) VALUES (103, 'Moore', 'Roger');
INSERT INTO students (id, lastname, firstname) VALUES (104, 'Craig', 'Daniel');
SELECT * from students
show columns from students;
select user();               (to identify the user)
mysql -u student -p         (switch user to student
--------------------------
sudo apt install libmariadb-java (did not help)


Downloaded the jdbc driver jar file and added to intellij project, an dthen it worked
----------------------------------
sudo snap install mysql-workbench-community
